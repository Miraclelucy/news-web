20171107el&jstl
jsp指令：
    page
    include  静态包含<%include  file="/jsp/head.jsp" %>
    taglib

page指令的属性：
    contentType	设置浏览器默认的打开的时候的编码.
    pageEncoding  设置JSP文件保存到硬盘,以及翻译成Servlet保存到硬盘的编码格式.
    language  当前jsp页面可以嵌套的语言。值一般都是java
    session  页面是否允许用session
    extends 当前页面继承某个类，必须继承的是HttpServlet类或者其子类
    isELIgnored  是否忽略EL表达式
    isErrorPage  当前页面是否是一个错误页面
    ErrorPage 页面出错后，跳转的页面

taglib：导入标签库
    <%@taglib prefix="前缀名" uri="名称空间"%>
    使用的方法：<前缀名:标签>

jsp内置对象：
    application 是一个ServletContext实例
    config 是一个ServletConfig实例
    request  是一个httpServletRequest实例
    response  是一个httpServletResponse实例
    session 是一个httpSession实例 管理会话
    page  代表JSP页面本身Servlet(this)， 对JSP页面创建者通常不可访问，所以一般很少用
    exception  Throwable
    out  是一个JspWriter 用来向客户端输出数据
    pageContext  是一个PageContext

jsp的域对象：
    application （和java中共用）整个项目
    session  （和java中共用）  一次回话
    request  （和java中共用）  一次请求
    pageContext              一个页面

    pageContext的使用
    1.域对象 xxxAttribute()
    2.操作其他域对象  xxxAttribute(... , int scope)
        其中scope的取值为 APPLICATION_SCOPE/SESSION_SCOPE/REQUESET_SCOPE/PAGE_SCOPE

    3. 便捷查找
    findAttribute(String key) 依次从pageContext,request,session,application 中查找这个属性

jsp动作标签
    <jsp:forward>请求转发
    <jsp:include>动态包含

el表达式作用：
    1 用来获取域中对象☆ (域中的字符串，list,map,JavaBean对象)
    2 执行运算☆
    3 获取常见的web对象(el内置对象12个，)
        最常用的2个：${cookie.cookie名称.value}
        ${pageContext.request.contextPath}
    4 调用java的方法

jstl标签库 ☆☆☆☆  需要导入2个jar包  jstl.jar  standard.jar
    JSTL的五大标签库:core、fmt、xml、sql、fn
    http://www.runoob.com/jsp/jsp-jstl.html
    页面引入标签库
    <%taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
    <%taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
    ${fn:substring(p.name)}


demo见页面/1/testfrom.jsp


jquery中的ajax
///////////////////////////
四种:
	了解:jquery对象.load(url,params,function(数据){});
	★: $.get(url,params,function(数据){},type);
		发送get请求的ajax
			url:请求的路径
			params:请求的参数 参数为key\value的形式 key=value  {"":"","":""}
			fn:回调函数 参数就是服务器发送回来的数据
			type:返回内容格式，xml, html, script, json, text, _default。    以后用"json"

	★: $.post(url,params,function(数据){},type);
		发送post请求的ajax

		若结果为json格式,  打印返回值的时候是一个对象
			例如若json为 {"result":"success","msg":"成功"}
			获取msg 只需要	参数.msg
	理解:
		$.ajax([选项]);
			选项的可选值:
				url:请求路径
				type:请求方法
				data:发送到服务器的数据
				success:fn 成功以后的回调
				error:fn 异常之后的回调
				dataType:返回内容格式 经常使用json
				async:设置是否是异步请求
			例如:
				$.ajax({
					url:"/day15/demo1",
					type:"post",
					data:"username=tom",
					success:function(d){
						alert(d.msg);
					},
					error:function(){},
					dataType:"json"

				});

//////////////////////
